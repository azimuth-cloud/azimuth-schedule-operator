# Config for the operator
config:
  placeholder: "asdf"

# The operator image to use
image:
  repository: ghcr.io/stackhpc/azimuth-schedule-operator
  pullPolicy: IfNotPresent
  tag: ""  # Defaults to appVersion

imagePullSecrets: []

# Liveness probe for the operator
livenessProbe:
  httpGet:
    path: /healthz
    port: 8000
  periodSeconds: 10
  failureThreshold: 1

# Liveness probe for the operator
startupProbe:
  httpGet:
    path: /healthz
    port: 8000
  periodSeconds: 10
  failureThreshold: 3

# Pod-level security context
podSecurityContext:
  runAsNonRoot: true

# Container-level security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

# Resource requests and limits for the containers
resources: {}

# Node selector for operator pods
nodeSelector: {}

# Affinity rules for operator pods
affinity: {}

# Tolerations for operator pods
tolerations: []

# Settings for kube-state-metrics
metrics:
  enabled: false
  # Configuration for the dashboard
  dashboard:
    enabled: true
    labels:
      grafana_dashboard: "1"
  prometheus:
    rules:
      enabled: true
    monitor:
      enabled: true
      honorLabels: true
  # Disable all the default collectors
  collectors: []
  # Allow kube-state-metrics read-only access to our CRDs
  rbac:
    create: true
    extraRules:
      - apiGroups:
          - schedule.azimuth.stackhpc.com
        resources:
          - schedules
        verbs:
          - list
          - watch
          - get
  # Configure kube-state-metrics to report only on our custom resources
  extraArgs:
    - --custom-resource-state-only=true
  customResourceState:
    enabled: true
    config:
      kind: CustomResourceStateMetrics
      spec:
        resources:
          - groupVersionKind:
              group: schedule.azimuth.stackhpc.com
              version: v1alpha1
              kind: Schedule
            metricNamePrefix: azimuth_schedule_clusters
            labelsFromPath:
              cluster_namespace: [metadata, namespace]
              cluster_name: [metadata, name]
              cluster_type_name: [spec, clusterTypeName]
              cluster_type_version: [spec, clusterTypeVersion]
            metrics:
              - name: phase
                help: "Schedule phase"
                each:
                  type: Info
                  info:
                    labelsFromPath:
                      phase: [status, phase]
