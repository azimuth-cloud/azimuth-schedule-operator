[tox]
minversion = 4.0.0
# We run autofix last, to ensure CI fails,
# even though we do our best to autofix locally
envlist = py3,ruff,codespell,autofix
skipsdist = True

[testenv]
basepython = python3
usedevelop = True
setenv =
   PYTHONWARNINGS=default::DeprecationWarning
   OS_STDOUT_CAPTURE=1
   OS_STDERR_CAPTURE=1
   OS_TEST_TIMEOUT=60
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = stestr run {posargs}

[testenv:autofix]
commands =
    ruff format {tox_root}
    codespell {tox_root} -w
    ruff check {tox_root} --fix

[testenv:lower-constraints]
deps = -c{toxinidir}/lower-constraints.txt
       -r{toxinidir}/test-requirements.txt

[testenv:black]
# TODO: understand why ruff doesn't fix
# line lengths as well as black does
commands = black {tox_root} {posargs}

[testenv:codespell]
commands = codespell {posargs}

[testenv:ruff]
description = Run Ruff checks
commands =
    ruff check {tox_root}
    ruff format {tox_root} --check

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
    VIRTUAL_ENV={envdir}
    PYTHON=coverage run --source azimuth_schedule_operator --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -W -b html doc/source doc/build/html

[testenv:releasenotes]
deps = {[testenv:docs]deps}
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:kopf]
passenv =
  CONSUL_HTTP_ADDR
  ANSIBLE_RUNNER_IMAGE_TAG
commands =
  pip install -U -e {tox_root}
  kopf run azimuth_schedule_operator/operator.py --all-namespaces
